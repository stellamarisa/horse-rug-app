// Generated by CoffeeScript 2.6.1

import React, { Component } from 'react'
import ReactDOM from 'react-dom'
import { DBConfig } from './DBConfig'
import { initDB } from 'react-indexed-db'
import moment from 'moment'
import 'moment/locale/de'

import '@fortawesome/fontawesome-free/js/all.min.js'
import '@fortawesome/fontawesome-free/css/all.min.css'

import Pferde from './Pferde'
import Decken from './Decken'
import Wetter from './Wetter'
import Home from './Home'

import { BottomNavigation, BottomNavigationAction, CssBaseline, Icon, ThemeProvider } from '@material-ui/core'
import { createTheme } from '@material-ui/core/styles'
;
var App, theme;

initDB(DBConfig);

theme = createTheme({
  palette: {
    primary: {
      light: '#bc477b',
      main: '#880e4f',
      dark: '#560027',
      contrastText: '#fff'
    },
    secondary: {
      light: '#ff5c8d',
      main: '#d81b60',
      dark: '#a00037',
      contrastText: '#fff'
    }
  }
});

App = class App extends Component {
  constructor() {
    super();
    this._isMounted = false;
    this.state = {
      page: 0,
      weatherResponse: "load"
    };
  }

  componentDidMount() {
    this._isMounted = true;
    moment.locale('de');
    return navigator.geolocation.getCurrentPosition((position) => {
      return fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${position.coords.latitude}&lon=${position.coords.longitude}&units=metric&lang=de&exclude=current,minutely,hourly&appid=${process.env.WEATHER_API_KEY}`).then((response) => {
        return response.json();
      }).then((data) => {
        if (this._isMounted) {
          return this.setState({
            weatherResponse: data
          });
        }
      }).catch((e) => {
        if (this._isMounted) {
          return this.setState({
            weatherResponse: null
          });
        }
      });
    });
  }

  componentWillUnmount() {
    return this._isMounted = false;
  }

  render() {
    return <ThemeProvider theme={theme}>
      <CssBaseline />
      <div className="main">
        {this.state.page === 1 ? <Pferde /> : this.state.page === 2 ? <Decken /> : this.state.page === 3 ? <Wetter weatherResponse={this.state.weatherResponse} /> : <Home weatherResponse={this.state.weatherResponse} />}
      </div>
      <BottomNavigation value={this.state.page} onChange={(event, val) => {
      return this.setState({
        page: val
      });
    }} showLabels className="footer">
        <BottomNavigationAction className="navButton" label="Start" icon={<Icon className="fas fa-home" style={{
      fontSize: 35,
      minWidth: 50,
      marginBottom: 10
    }} />} />
        <BottomNavigationAction className="navButton" label="Pferde" icon={<Icon className="fas fa-horse-head" style={{
      fontSize: 35,
      minWidth: 50,
      marginBottom: 10
    }} />} />
        <BottomNavigationAction className="navButton" label="Decken" icon={<Icon className="fas fa-shopping-bag" style={{
      fontSize: 35,
      minWidth: 50,
      marginBottom: 10
    }} />} />
        <BottomNavigationAction className="navButton" label="Wetter" icon={<Icon className="fas fa-cloud-sun-rain" style={{
      fontSize: 35,
      minWidth: 50,
      marginBottom: 10
    }} />} />
      </BottomNavigation>
    </ThemeProvider>;
  }

};

ReactDOM.render(<App />, document.getElementById('root'));
